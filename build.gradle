plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'antlr'
    id "kr.motd.sphinx" version "2.10.0"
    id 'scala'
}

group = 'org.smolang'
version = '0.5'

kotlin {
    jvmToolchain(21)
}
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

repositories {
    mavenCentral()
    maven { url "https://overture.au.dk/artifactory/libs-release/" }
    maven { url "https://jitpack.io" }
}

test {
    useJUnitPlatform()
}
sourceSets {
    main {
        java.srcDirs += 'build/generated-src/main'
        kotlin.srcDirs += 'build/generated-src/main'
        antlr.srcDirs += 'src/main/antlr'
    }
}
ext {
    jenaVersion = '3.16.0' // Ontoapi uses classes from this version that are not in new versions
    hopliteVersion = '1.4.1'
    antlrVersion = '4.13.1'
}
dependencies {
    implementation("com.google.guava:guava:22.0") // Required with this version for HermiT and OntoAPI
    testImplementation("io.kotest:kotest-runner-junit5:5.9.1")
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")
    testImplementation("org.apache.commons:commons-lang3:3.14.0")
    testImplementation("org.apache.jena:jena-fuseki-main:${jenaVersion}")
    implementation("com.github.ajalt.clikt:clikt:4.4.0")
    implementation("org.antlr:antlr4:${antlrVersion}")
    antlr("org.antlr:antlr4:${antlrVersion}")
    implementation("net.sourceforge.owlapi:org.semanticweb.hermit:1.4.5.519")
    implementation("org.slf4j:slf4j-simple:2.0.13")
    implementation("org.apache.jena:apache-jena-libs:${jenaVersion}")
    implementation("org.apache.jena:jena-core:${jenaVersion}")
    implementation("org.siani.javafmi:fmu-wrapper:2.26.5")
    implementation("com.influxdb:influxdb-client-kotlin:7.1.0")
    implementation("com.sksamuel.hoplite:hoplite-core:${hopliteVersion}")
    implementation("com.sksamuel.hoplite:hoplite-yaml:${hopliteVersion}")
    implementation("com.github.owlcs:ontapi:2.1.0") // Later version cannot use the proper dependencies
    implementation("org.jline:jline:3.26.2")
}


generateGrammarSource {
    outputDirectory = file("build/generated-src/main/no/uio/microobject/antlr")
    arguments += ["-visitor"]
}

compileKotlin {
    kotlinOptions.jvmTarget = project.sourceCompatibility
}
compileKotlin.dependsOn generateGrammarSource

compileTestKotlin.dependsOn generateTestGrammarSource

jar {
    archiveFileName='smol.jar'
    manifest {
        attributes 'Main-Class': 'no.uio.microobject.main.MainKtKt'
    }
}
shadowJar {
    archiveFileName='smol.jar'
}
assemble.dependsOn shadowJar

sphinx {
    // Documentation at
    // https://trustin.github.io/sphinx-gradle-plugin/index.html
    sourceDirectory = "${projectDir}/website/source"
    configDirectory = "${projectDir}/website/source"
    outputDirectory = "${projectDir}/website/build/html"
    builder = "html"
}
clean {
    delete files("${projectDir}/website/build")
}
